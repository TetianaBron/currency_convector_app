{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","type","className","value","onChange","map","option","BASE_URL","App","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","saleExchangeRate","setSaleExchangeRate","buyExchangeRate","setBuyExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","toAmount","fromAmount","Math","round","useEffect","fetch","then","res","json","data","currencies","item","ccy","baseCurrency","base_ccy","unshift","firstCurrency","sale","buy","saleExchangeRateOfToCurrency","find","buyExchangeRateOfToCurrency","itemFromCurrency","itemToCurrency","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6309845c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CurrencyRow = props => {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    amount,\r\n    onChangeAmount,\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        className=\"input\"\r\n        value={amount}\r\n        onChange={onChangeAmount}\r\n      />\r\n      <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n        {currencyOptions.map(option => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyRow;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL =\n  'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5';\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState('');\n  const [toCurrency, setToCurrency] = useState('');\n  const [saleExchangeRate, setSaleExchangeRate] = useState('');\n  const [buyExchangeRate, setBuyExchangeRate] = useState('');\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\n  let toAmount = null;\n  let fromAmount = null;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    // for from UAN\n    if (toCurrency === fromCurrency) {\n      toAmount = amount;\n    } else if (fromCurrency === 'UAH') {\n      toAmount = Math.round((amount / saleExchangeRate) * 100) / 100;\n    } else if (fromCurrency !== 'UAH' && toCurrency === 'UAH') {\n      toAmount = Math.round(amount * buyExchangeRate * 100) / 100;\n    } else {\n      toAmount =\n        Math.round(((amount * buyExchangeRate) / saleExchangeRate) * 100) / 100;\n    }\n  } else {\n    toAmount = amount;\n    if (toCurrency === fromCurrency) {\n      fromAmount = amount;\n    } else if (fromCurrency === 'UAH') {\n      fromAmount = Math.round(amount * saleExchangeRate * 100) / 100;\n    } else if (fromCurrency !== 'UAH' && toCurrency === 'UAH') {\n      fromAmount = Math.round((amount / buyExchangeRate) * 100) / 100;\n    } else {\n      fromAmount =\n        Math.round((amount / buyExchangeRate) * saleExchangeRate * 100) / 100;\n    }\n  }\n\n  //first render - from UAH to first currency in API (to USD)\n  useEffect(() => {\n    fetch(BASE_URL)\n      //Get data from Privat Api\n      .then(res => res.json())\n      .then(data => {\n        // console.log(data);\n        //Create array of all currencies\n        const currencies = data.map(item => item.ccy);\n        //Get base_ccy from first object from data;\n        const baseCurrency = data[0].base_ccy;\n        //Add baseCurrency to currencies' array as first element\n        currencies.unshift(baseCurrency);\n        //Assign the first element to be displayed in the interface\n        const firstCurrency = currencies[0];\n        //Set data in state\n        setSaleExchangeRate(data[0].sale);\n        setBuyExchangeRate(data[0].buy);\n        setCurrencyOptions(currencies);\n        setFromCurrency(firstCurrency);\n        setToCurrency(currencies[1]);\n      });\n  }, []);\n\n  //from when we are changing toCurrency or fromCurrency selects)\n  useEffect(() => {\n    if (toCurrency && fromCurrency) {\n      fetch(BASE_URL)\n        .then(res => res.json())\n        .then(data => {\n          if (fromCurrency === toCurrency) {\n            return;\n          }\n          //from UAH to another currency (when we are changing toCurrency select)\n          if (fromCurrency === 'UAH') {\n            const item = data.find(item => item.ccy === toCurrency);\n            const saleExchangeRateOfToCurrency = item.sale;\n            setSaleExchangeRate(saleExchangeRateOfToCurrency);\n          } else if (fromCurrency !== 'UAH' && toCurrency === 'UAH') {\n            //from different currency (NOT UAH) to UAH\n            const item = data.find(item => item.ccy === fromCurrency);\n            const buyExchangeRateOfToCurrency = item.buy;\n            setBuyExchangeRate(buyExchangeRateOfToCurrency);\n          } else {\n            //from Not-UAH to Not-UAH\n            const itemFromCurrency = data.find(\n              item => item.ccy === fromCurrency,\n            );\n            const buyExchangeRateOfToCurrency = itemFromCurrency.buy;\n            setBuyExchangeRate(buyExchangeRateOfToCurrency);\n            const itemToCurrency = data.find(item => item.ccy === toCurrency);\n            const saleExchangeRateOfToCurrency = itemToCurrency.sale;\n            setSaleExchangeRate(saleExchangeRateOfToCurrency);\n          }\n        });\n    }\n  }, [toCurrency, fromCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return (\n    <>\n      <h1>Convert</h1>\n      <p>Продаю</p>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\n        onChangeAmount={handleFromAmountChange}\n        amount={fromAmount}\n      />\n      <div className=\"equals\">=</div>\n      <p>Покупаю</p>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        onChangeAmount={handleToAmountChange}\n        amount={toAmount}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}